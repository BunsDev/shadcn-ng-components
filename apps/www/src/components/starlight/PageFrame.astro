---
import MobileMenuToggle from "./MobileMenuToggle.astro";
import type { Props } from "@astrojs/starlight/props";

const { hasSidebar, labels } = Astro.props;
---

<div class="min-h-screen bg-background font-sans antialiased">
  <div class="relative flex min-h-screen flex-col bg-background">
    <slot name="header" />
    <div class="flex-1">
      <div class={hasSidebar ? "" : "container relative"}>
        {
          hasSidebar ? (
            <div class="border-b">
              <div class="container flex-1 items-start md:grid md:grid-cols-[220px_minmax(0,1fr)] md:gap-6 lg:grid-cols-[240px_minmax(0,1fr)] lg:gap-10">
                <nav
                  class="md:sticky md:top-14"
                  aria-label={labels["sidebarNav.accessibleLabel"]}
                >
                  <MobileMenuToggle {...Astro.props} />
                  <aside class="z-30 -ml-2 hidden h-[calc(100vh-3.5rem)] w-full shrink-0 md:sticky md:block sidebar-pane">
                    <div
                      class="relative overflow-hidden h-full py-6 pr-6 lg:py-8 px-4 md:px-0"
                      id="starlight__sidebar"
                    >
                      <div class="w-full">
                        <slot name="sidebar" />
                      </div>
                    </div>
                  </aside>
                </nav>
                <slot />
              </div>
            </div>
          ) : (
            <slot />
          )
        }
      </div>
    </div>
  </div>
</div>

<style>
  :global([aria-expanded="true"]) ~ .sidebar-pane {
    @apply block -ml-0 fixed bg-background;

    position: fixed;
    inset-block: var(--sl-nav-height) 0;
    inset-inline-start: 0;
    width: var(--sl-sidebar-width);
  }
</style>

<!-- <div class="page sl-flex">
  <header class="header">
    <slot name="header" />
  </header>
  {
    hasSidebar ? (
      <>
        <nav class="sidebar" aria-label={labels["sidebarNav.accessibleLabel"]}>
          <MobileMenuToggle {...Astro.props} />
          <div id="starlight__sidebar" class="sidebar-pane">
            <div class="sidebar-content sl-flex">
              <slot name="sidebar" />
            </div>
          </div>
        </nav>
        <div class="main-frame">
          <slot />
        </div>
      </>
    ) : (
      <main class="flex-1">
        <div class="container relative">
          <slot />
        </div>
      </main>
    )
  }
</div>

<style>
  .page {
    flex-direction: column;
    min-height: 100vh;
  }

  .header {
    z-index: var(--sl-z-index-navbar);
    position: fixed;
    inset-inline-start: 0;
    inset-block-start: 0;
    width: 100%;
    height: var(--sl-nav-height);
    border-bottom: 1px solid var(--sl-color-hairline-shade);
    padding: var(--sl-nav-pad-y) var(--sl-nav-pad-x);
    padding-inline-end: var(--sl-nav-pad-x);
    background-color: var(--sl-color-bg-nav);
  }

  :global([data-has-sidebar]) .header {
    padding-inline-end: calc(
      var(--sl-nav-gap) + var(--sl-nav-pad-x) + var(--sl-menu-button-size)
    );
  }

  .sidebar-pane {
    visibility: var(--sl-sidebar-visibility, hidden);
    position: fixed;
    z-index: var(--sl-z-index-menu);
    inset-block: var(--sl-nav-height) 0;
    inset-inline-start: 0;
    width: 100%;
    background-color: var(--sl-color-black);
    overflow-y: auto;
  }

  :global([aria-expanded="true"]) ~ .sidebar-pane {
    --sl-sidebar-visibility: visible;
  }

  .sidebar-content {
    height: 100%;
    min-height: max-content;
    padding: 1rem var(--sl-sidebar-pad-x) 0;
    flex-direction: column;
    gap: 1rem;
  }

  @media (min-width: 50rem) {
    .sidebar-content::after {
      content: "";
      padding-bottom: 1px;
    }
  }

  .main-frame {
    padding-top: calc(var(--sl-nav-height) + var(--sl-mobile-toc-height));
    padding-inline-start: var(--sl-content-inline-start);
  }

  @media (min-width: 50rem) {
    :global([data-has-sidebar]) .header {
      padding-inline-end: var(--sl-nav-pad-x);
    }
    .sidebar-pane {
      --sl-sidebar-visibility: visible;
      width: var(--sl-sidebar-width);
      background-color: var(--sl-color-bg-sidebar);
      border-inline-end: 1px solid var(--sl-color-hairline-shade);
    }
  }
</style> -->
