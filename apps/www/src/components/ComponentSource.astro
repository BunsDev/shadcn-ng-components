---
import path from "path";
import { styles } from "@/registry/styles";
import { ui } from "@/registry/ui";
import { readFileSync } from "fs";
import { Code } from "@astrojs/starlight/components";

export interface Props {
  name: string;
}

const { name } = Astro.props;

const componentUi = ui.find((value) => value.name === name);

const allComponents = componentUi?.files.flatMap((file) => {
  return styles.map((style) => {
    const filename = path.join(
      process.cwd(),
      "src",
      "registry",
      style.name,
      file
    );

    const code = readFileSync(`${filename}`)
      .toString()
      .replace(/export\s+default\s+.*;\s*/, "")
      .replace(/@\/registry\/.*\/ui/g, "@/components/ui");

    return {
      style,
      code,
    };
  });
});
---

{
  allComponents?.map(({ code, style }, index) => (
    <div
      data-target={$("source-" + style.name)}
      class="w-[38rem]"
      hidden={index !== 0}
    >
      <Code code={code} class="w-[38rem]" wrap={true} />
    </div>
  ))
}
<script>
  import { styles } from "@/registry/styles";

  $.ready(async () => {
    document
      .getElementById("change-style")
      ?.addEventListener("change", (event) => {
        // @ts-expect-error
        const value = event.target.value;
        hiddeComponents();
        $(`source-${value}`).hidden = false;
      });

    function hiddeComponents() {
      styles.forEach(({ name }) => {
        $(`source-${name}`).hidden = true;
      });
    }
  });
</script>
